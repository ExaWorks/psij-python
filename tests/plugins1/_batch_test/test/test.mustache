#!/bin/bash

exec &> "{{psij.script_dir}}/$PSIJ_BATCH_TEST_JOB_ID.out"

{{> batch_lib}}

{{#job.spec.directory}}
cd "{{.}}"
{{/job.spec.directory}}

export PSIJ_TEST_BATCH_EXEC_COUNT=1

{{#job.spec.resources}}
    {{#computed_process_count}}
export PSIJ_TEST_BATCH_EXEC_COUNT={{.}}
    {{/computed_process_count}}
{{/job.spec.resources}}

{{#job.spec.attributes}}
    {{#queue_name}}
export PSIJ_TEST_BATCH_EXEC_QUEUE="{{.}}"
    {{/queue_name}}
    {{#account}}
export PSIJ_TEST_BATCH_EXEC_PROJECT="{{.}}"
export PSIJ_TEST_BATCH_EXEC_ACCOUNT="{{.}}"
    {{/account}}
    {{#reservation_id}}
export PSIJ_TEST_BATCH_EXEC_RES_ID="{{.}}"
    {{/reservation_id}}
{{/job.spec.attributes}}

{{#custom_attributes}}
    {{#batch-test}}
export {{key}}="{{value}}"
    {{/batch-test}}
{{/custom_attributes}}


HOSTNAME=`hostname`
PSIJ_NODEFILE="{{psij.script_dir}}/$PSIJ_BATCH_TEST_JOB_ID.nodefile"
rm -f "$PSIJ_NODEFILE"
for NODE in $(seq 1 1 "$PSIJ_TEST_BATCH_EXEC_COUNT"); do
    echo  "$HOSTNAME-$NODE" >> "$PSIJ_NODEFILE"
done

export PSIJ_NODEFILE

{{> stagein}}
_psij_update_status ACTIVE

{{#job.spec.inherit_environment}}env \{{/job.spec.inherit_environment}}{{^job.spec.inherit_environment}}env --ignore-environment \{{/job.spec.inherit_environment}}{{#env}}
{{name}}="{{value}}" \{{/env}}
{{#psij.launch_command}}{{.}} {{/psij.launch_command}}
_PSIJ_JOB_EC="$?"

{{> stageout}}
{{> cleanup}}


echo $_PSIJ_JOB_EC > "{{psij.script_dir}}/$PSIJ_BATCH_TEST_JOB_ID.ec"
echo "_PSIJ_SCRIPT_DONE"